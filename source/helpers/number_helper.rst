#############
Number Helper
#############

The Number Helper file contains functions that help you work with
numeric data in a locale-aware manner.
Number Helper 파일에는 로케일 인식 방식으로 숫자 데이터로 작업하는 데 도움이되는 함수가 들어 있습니다.
.. contents::
  :local:

.. raw:: html

  <div class="custom-index container"></div>

Loading this Helper
===================

This helper is loaded using the following code
이 도우미는 다음 코드를 사용하여로드됩니다.


::

	helper('number');

When Things Go Wrong
====================

If PHP's internationalization and localization logic cannot handle
a value provided, for the given locale and options, then a
``BadFunctionCallException()`` will be thrown.
PHP의 국제화 및 지역화 논리가 제공된 로케일과 옵션에 대해 제공된 값을 처리 할 수없는 경우 ``BadFunctionCallException()`` 가 발생합니다.

Available Functions
===================

The following functions are available:
이 도우미는 다음 코드를 사용하여로드됩니다.

.. php:function:: number_to_size($num[, $precision = 1[, $locale = null])

    :param	mixed	$num: Number of bytes
    :param	int	$precision: Floating point precision
    :returns:	Formatted data size string, or false if the provided value is not numeric
    :rtype:	string

    Formats numbers as bytes, based on size, and adds the appropriate
    suffix. 
    크기를 기준으로 숫자를 바이트로 형식화하고 적절한 접미사를 추가합니다. 예 :
    
    ::

        echo number_to_size(456); // Returns 456 Bytes
        echo number_to_size(4567); // Returns 4.5 KB
        echo number_to_size(45678); // Returns 44.6 KB
        echo number_to_size(456789); // Returns 447.8 KB
        echo number_to_size(3456789); // Returns 3.3 MB
        echo number_to_size(12345678912345); // Returns 1.8 GB
        echo number_to_size(123456789123456789); // Returns 11,228.3 TB

    An optional second parameter allows you to set the precision of the result
    선택적 두 번째 매개 변수를 사용하면 결과의 정밀도를 설정할 수 있습니다.
    
    ::

	    echo number_to_size(45678, 2); // Returns 44.61 KB

    An optional third parameter allows you to specify the locale that should
    be used when generating the number, and can affect the formatting. If no
    locale is specified, the Request will be analyzed and an appropriate
    locale taken from the headers, or the app-default
    선택적 세 번째 매개 변수를 사용하면 숫자를 생성 할 때 사용해야하는 로캘을 지정할 수 있으며 서식에 영향을 줄 수 있습니다.
    로케일을 지정하지 않으면 요청이 분석되고 헤더에서 적절한 로케일이 추출되거나 app-default가 사용됩니다.
    
    ::

        // Generates 11.2 TB
        echo number_to_size(12345678912345, 1, 'en_US');
        // Generates 11,2 TB
        echo number_to_size(12345678912345, 1, 'fr_FR');

    .. note:: The text generated by this function is found in the following
		language file: *language/<your_lang>/Number.php*
		이 함수에 의해 생성 된 텍스트는 다음 언어 파일에 있습니다. *language / <your_lang> /Number.php*

.. php:function:: number_to_amount($num[, $precision = 1[, $locale = null])

    :param	mixed	$num: Number to format
    :param	int	$precision: Floating point precision
    :param  string $locale: The locale to use for formatting
    :returns:	A human-readable version of the string, or false if the provided value is not numeric
    :rtype:	string

    Converts a number into a human-readable version, like **123.4 trillion**
    for numbers up to the quadrillions. Examples
    숫자를 사람이 읽을 수있는 버전으로 변환합니다 (예 : 4 사분기 까지의 숫자는 **123.4 조**). 예 :
    
    ::

        echo number_to_amount(123456); // Returns 123 thousand
        echo number_to_amount(123456789); // Returns 123 million
        echo number_to_amount(1234567890123, 2); // Returns 1.23 trillion
        echo number_to_amount('123,456,789,012', 2); // Returns 123.46 billion

    An optional second parameter allows you to set the precision of the result
    선택적 두 번째 매개 변수를 사용하면 결과의 정밀도를 설정할 수 있습니다.
    
    ::

        echo number_to_amount(45678, 2); // Returns 45.68 thousand

    An optional third parameter allows the locale to be specified
    세 번째 매개 변수를 사용하면 로켈을 지정할 수 있습니다.
    
    ::

        echo number_to_amount('123,456,789,012', 2, 'de_DE'); // Returns 123,46 billion

.. php:function:: number_to_currency($num, $currency[, $locale = null])

    :param mixed $num: Number to format
    :param string $currency: The currency type, i.e. USD, EUR, etc
    :param string $locale: The locale to use for formatting
    :returns: The number as the appropriate currency for the locale
    :rtype: string

    Converts a number in common currency formats, like USD, EUR, GBP, etc
    USD, EUR, GBP 등과 같이 일반적인 통화 형식으로 숫자를 변환합니다.
    
    ::

        echo number_to_currency(1234.56, 'USD');  // Returns $1,234.56
        echo number_to_currency(1234.56, 'EUR');  // Returns £1,234.56
        echo number_to_currency(1234.56, 'GBP');  // Returns £1,234.56
        echo number_to_currency(1234.56, 'YEN');  // Returns YEN1,234.56

.. php:function:: number_to_roman($num)

    :param string $num: The number want to convert
    :returns: The roman number converted from given parameter
    :rtype: string

    Converts a number into roman
    숫자를 로마자로 변환합니다.
    
    ::

        echo number_to_roman(23);  // Returns XXIII
        echo number_to_roman(324);  // Returns CCCXXIV
        echo number_to_roman(2534);  // Returns MMDXXXIV

    This function only handles numbers in the range 1 through 3999.
    It will return null for any value outside that range .
    이 함수는 1에서 3999 범위의 숫자 만 처리합니다.이 범위를 벗어난 값은 null을 반환합니다.